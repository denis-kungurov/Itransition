@using System.Web.UI.WebControls
@using SellYourTime.Models
@model SellYourTime.Models.Offer
@{
    ViewBag.Title = "Offer Page";
}

<div class="panel panel-success col-xs-offset-1 col-xs-10" style="padding: 0">
    <div class="col-xs-12 panel-heading">
        <div class="col-xs-4">
            <h3 class="panel-title">
                @Model.Title
            </h3>
        </div>
        <div class="col-xs-2">
            <h3 class="panel-title">
               Rating:
                <span id="ratingSpan">
                     @if (@Model.Rating != null)
                           {
                               @Model.Rating
                           }
                </span>
            </h3>
        </div>
        <div class="col-xs-2">
            <h3 class="panel-title">
                Created by:
                @Model.User.UserName
            </h3>
        </div>
        <div class="col-xs-3">
            <h3 class="panel-title">
                <a>At:</a>
                @Model.DateAdded
            </h3>
        </div>
        <div class="col-xs-1">
            @if (Model.User.UserName == User.Identity.Name)
            {
                <a type="button" class="btn btn-success" style="padding: 0" href="@Url.Action("Index","Create", new { offerId = Model.Id})"> Edit </a>
            }
        </div>
    </div>
    <div class="panel-body" style="margin-top: 50px">
        <div class="col-xs-12 row">
            <div id="MyCarousel" class="carousel slide col-xs-4" style="width: 40%; height: 40%" data-ride="carousel">
                @if (ViewBag.CountOfPhoto >= 1)
                {
                    <ol class="carousel-indicators">
                        <li data-target="#MyCarousel" data-slide-to="0" class="active"></li>
                        @if (ViewBag.CountOfPhoto >= 2)
                        {
                            <li data-target="#MyCarousel" data-slide-to="1" class=""></li>
                            if (ViewBag.CountOfPhoto >= 3)
                            {
                                <li data-target="#MyCarousel" data-slide-to="2" class=""></li>
                            }
                        }
                    </ol>
                }
                <div class="carousel-inner">
                    @if (@Model.FirstPhotoPath != null)
                    {
                        <div class="item active">
                            <img src="@Model.FirstPhotoPath">
                        </div>
                    }
                    @if (@Model.SecondPhotoPath != null)
                    {
                        <div class="item">
                            <img src="@Model.SecondPhotoPath">
                        </div>
                    }
                    @if (@Model.ThirdPhotoPath != null)
                    {
                        <div class="item">
                            <img src="@Model.ThirdPhotoPath">
                        </div>
                    }
                </div>
                @if (@Model.SecondPhotoPath != null)
                {
                    <a class="left carousel-control" href="#MyCarousel" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left"></span>
                    </a>
                }
                @if (@Model.ThirdPhotoPath != null)
                {
                    <a class="right carousel-control" href="#MyCarousel" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right"></span>
                    </a>
                }
            </div>
            <h3>@Model.Description</h3>
        </div>
        <div class="col-xs-5">
            @foreach (Tag tag in Model.Tags)
            {
                <h4>#@tag.Value</h4>
            }
        </div>
        <div class="col-xs-12 row" style="margin-top: 20px">
            <div class="col-xs-offset-1 col-xs-4 row">
                <span class="label label-danger col-xs-12 row" style="font-size: 30px; width: 100%; padding: 0">
                    <div class="col-xs-4" style="padding-top: 5px; padding-bottom: 5px; font-size: 25px">Price:</div>
                    <span class="col-xs-offset-1 col-xs-7" style="height: 35px; margin-top: 5px">@Model.Price</span>
                </span>
            </div>
            <a type="button" class="btn btn-primary col-xs-offset-3 col-xs-4" href="@Url.Action("SuccessPage","OfferPage", new { id = Model.Id})"> Buy </a>
        </div>
        @if (ViewBag.CurrentUser != null && ViewBag.CurrentUser != 1)
{
    <div class="col-xs-12" id="ratingDiv">
        <input id="ratings-hidden" type="hidden">
        <div class="text-right col-xs-11" align="center">
            <div class="stars starrr" data-rating="0"></div>
        </div>
        <div class="col-xs-1" style="margin-top: 20px;padding-left: 0">
            <button type="button" class="btn btn-primary" id="Rate" onclick="AddRate()">Rate</button>
        </div>
    </div>
}
    </div>
</div>
@if (ViewBag.CurrentUser != null)
{
    <div class="panel panel-success col-xs-offset-1 col-xs-10" style="padding: 0; margin-top: 20px">
        <legend class="h2"><div class=" col-xs-offset-1" style="margin-bottom: 10px">Comments</div></legend>
        <div class="col-xs-12">
            <ul class="list-group col-xs-12" id="commentsList">
                @if (Model.Comments != null)
                {
                    foreach (Comment comment in Model.Comments)
                    {
                        <li class="list-group-item col-xs-12">
                            <div class="col-xs-2" style="border-right-style: solid; border-right-width: 1px; border-right-color: #0D747C">
                                @comment.User.UserName
                            </div>
                            <div class="col-xs-8" style="border-right-style: solid; border-right-width: 1px; border-right-color: #0D747C">
                                @comment.Message
                            </div>
                            <div class="col-xs-2">
                                @comment.DateAdded
                            </div>
                        </li>
                    }
                }
            </ul>
        </div>
        <h3 class="col-xs-offset-1 col-xs-11" style="margin-top: 10px">Create comment</h3>
        <div class="col-xs-offset-1 col-xs-10" style="margin-bottom: 20px" id="new-review">
            <textarea class="form-control" rows="4" name="comment" id="comment" placeholder="Your comment"></textarea>
            <button type="button" class="btn btn-primary" style="margin-top: 10px" id="Create" onclick="AddComm()">Create comment</button>
        </div>
    </div>
}
<script src="~/Scripts/coffee-script.js"></script>
<script type="text/coffeescript">
    window.AddComm = AddComm = () ->
        value = document.getElementById("comment").value
        if value is ""
            alert "You must write a comment"
            return
        comment =
            message: value
            offerId: @Model.Id
        $.post "/OfferPage/AddComment", comment, (data) ->
            $("#commentsList").append data
            return

    window.AddRate = AddRate = () ->
        value = document.getElementById("ratings-hidden").value
        document.getElementById("ratingDiv").hidden = true
        if value is ""
            alert "You must choose a rating"
            return
        rate =
            value: value
            offerId: @Model.Id
        $.post "/OfferPage/AddRate", rate, (data) ->
            $("#ratingSpan").replaceWith data
            return
</script>
<script type="text/javascript">
   (function (e) { var t, o = { className: "autosizejs", append: "", callback: !1, resizeDelay: 10 }, i = '<textarea tabindex="-1" style="position:absolute; top:-999px; left:0; right:auto; bottom:auto; border:0; padding: 0; -moz-box-sizing:content-box; -webkit-box-sizing:content-box; box-sizing:content-box; word-wrap:break-word; height:0 !important; min-height:0 !important; overflow:hidden; transition:none; -webkit-transition:none; -moz-transition:none;"/>', n = ["fontFamily", "fontSize", "fontWeight", "fontStyle", "letterSpacing", "textTransform", "wordSpacing", "textIndent"], s = e(i).data("autosize", !0)[0]; s.style.lineHeight = "99px", "99px" === e(s).css("lineHeight") && n.push("lineHeight"), s.style.lineHeight = "", e.fn.autosize = function (i) { return this.length ? (i = e.extend({}, o, i || {}), s.parentNode !== document.body && e(document.body).append(s), this.each(function () { function o() { var t, o; "getComputedStyle" in window ? (t = window.getComputedStyle(u, null), o = u.getBoundingClientRect().width, e.each(["paddingLeft", "paddingRight", "borderLeftWidth", "borderRightWidth"], function (e, i) { o -= parseInt(t[i], 10) }), s.style.width = o + "px") : s.style.width = Math.max(p.width(), 0) + "px" } function a() { var a = {}; if (t = u, s.className = i.className, d = parseInt(p.css("maxHeight"), 10), e.each(n, function (e, t) { a[t] = p.css(t) }), e(s).css(a), o(), window.chrome) { var r = u.style.width; u.style.width = "0px", u.offsetWidth, u.style.width = r } } function r() { var e, n; t !== u ? a() : o(), s.value = u.value + i.append, s.style.overflowY = u.style.overflowY, n = parseInt(u.style.height, 10), s.scrollTop = 0, s.scrollTop = 9e4, e = s.scrollTop, d && e > d ? (u.style.overflowY = "scroll", e = d) : (u.style.overflowY = "hidden", c > e && (e = c)), e += w, n !== e && (u.style.height = e + "px", f && i.callback.call(u, u)) } function l() { clearTimeout(h), h = setTimeout(function () { var e = p.width(); e !== g && (g = e, r()) }, parseInt(i.resizeDelay, 10)) } var d, c, h, u = this, p = e(u), w = 0, f = e.isFunction(i.callback), z = { height: u.style.height, overflow: u.style.overflow, overflowY: u.style.overflowY, wordWrap: u.style.wordWrap, resize: u.style.resize }, g = p.width(); p.data("autosize") || (p.data("autosize", !0), ("border-box" === p.css("box-sizing") || "border-box" === p.css("-moz-box-sizing") || "border-box" === p.css("-webkit-box-sizing")) && (w = p.outerHeight() - p.height()), c = Math.max(parseInt(p.css("minHeight"), 10) - w || 0, p.height()), p.css({ overflow: "hidden", overflowY: "hidden", wordWrap: "break-word", resize: "none" === p.css("resize") || "vertical" === p.css("resize") ? "none" : "horizontal" }), "onpropertychange" in u ? "oninput" in u ? p.on("input.autosize keyup.autosize", r) : p.on("propertychange.autosize", function () { "value" === event.propertyName && r() }) : p.on("input.autosize", r), i.resizeDelay !== !1 && e(window).on("resize.autosize", l), p.on("autosize.resize", r), p.on("autosize.resizeIncludeStyle", function () { t = null, r() }), p.on("autosize.destroy", function () { t = null, clearTimeout(h), e(window).off("resize", l), p.off("autosize").off(".autosize").css(z).removeData("autosize") }), r()) })) : this } })(window.jQuery || window.$);

    var __slice = [].slice; (function (e, t) { var n; n = function () { function t(t, n) { var r, i, s, o = this; this.options = e.extend({}, this.defaults, n); this.$el = t; s = this.defaults; for (r in s) { i = s[r]; if (this.$el.data(r) != null) { this.options[r] = this.$el.data(r) } } this.createStars(); this.syncRating(); this.$el.on("mouseover.starrr", "span", function (e) { return o.syncRating(o.$el.find("span").index(e.currentTarget) + 1) }); this.$el.on("mouseout.starrr", function () { return o.syncRating() }); this.$el.on("click.starrr", "span", function (e) { return o.setRating(o.$el.find("span").index(e.currentTarget) + 1) }); this.$el.on("starrr:change", this.options.change) } t.prototype.defaults = { rating: void 0, numStars: 5, change: function (e, t) { } }; t.prototype.createStars = function () { var e, t, n; n = []; for (e = 1, t = this.options.numStars; 1 <= t ? e <= t : e >= t; 1 <= t ? e++ : e--) { n.push(this.$el.append("<span class='glyphicon .glyphicon-star-empty'></span>")) } return n }; t.prototype.setRating = function (e) { if (this.options.rating === e) { e = void 0 } this.options.rating = e; this.syncRating(); return this.$el.trigger("starrr:change", e) }; t.prototype.syncRating = function (e) { var t, n, r, i; e || (e = this.options.rating); if (e) { for (t = n = 0, i = e - 1; 0 <= i ? n <= i : n >= i; t = 0 <= i ? ++n : --n) { this.$el.find("span").eq(t).removeClass("glyphicon-star-empty").addClass("glyphicon-star") } } if (e && e < 5) { for (t = r = e; e <= 4 ? r <= 4 : r >= 4; t = e <= 4 ? ++r : --r) { this.$el.find("span").eq(t).removeClass("glyphicon-star").addClass("glyphicon-star-empty") } } if (!e) { return this.$el.find("span").removeClass("glyphicon-star").addClass("glyphicon-star-empty") } }; return t }(); return e.fn.extend({ starrr: function () { var t, r; r = arguments[0], t = 2 <= arguments.length ? __slice.call(arguments, 1) : []; return this.each(function () { var i; i = e(this).data("star-rating"); if (!i) { e(this).data("star-rating", i = new n(e(this), r)) } if (typeof r === "string") { return i[r].apply(i, t) } }) } }) })(window.jQuery, window); $(function () { return $(".starrr").starrr() })

    $(function () {
        $('#new-review').autosize({ append: "\n" });
        var ratingsField = $('#ratings-hidden');
        $('.starrr').on('starrr:change', function (e, value) {
            ratingsField.val(value);
        });
    });
</script>